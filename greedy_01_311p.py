


'''

< 모험가 길드 >



문제 :

한 마을에 모험가가 N명에게 공포도 측정을 했다.

공포도가 x인 모험가는 반드시 x명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있다.

N명의 모험가에 대한 정보가 주어졌을때

여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하라.





입력 :

1. N [1 | 100,000]
2. N이하의 공포도의 값 N개가 공백으로 구분되어 입력된다.





출력 :

1. 여행을 떠날 수 있는 그룹 수의 최대값을 출력하라





아이디어 :

공포도를 정렬시킨다.
그리디이므로 가장 작은 공포도 순으로 그룹에 채워넣고
조건을 만족시킨 그룹은 제외하고 그룹의 수를 +1 해준다.

N개의 모험가를 측정한후에 그룹의 수를 출력한다.





설계 :

1. 모험가의 수를 입력 받는다.
2. 모험가들의 공포도를 리스트로 입력받는다.
3. 공포도 리스트를 정렬한다.
4. 그룹 카운트 변수를 만든다.
5. 그룹에 들어간 모험가의 수를 체크할 변수를 만든다.
6. 모험가 수만큼 반복하는 반복문을 만든다.
7. 반복문 안에 모함가의 수가 채워졌다면 그룹카운트 변수에 +1 하고 모험가 체크 변수를 0으로 초기화해준다.




TestCase :

5
2 3 1 2 2




피드백 :

최대값 최소값 구하는 문제는 그리디 알고리즘 적용을 반드시 고려해볼 것


'''


# 내가 짠 코드 :

import sys
input_sys = sys.stdin.readline

N =int(input())

N_list = list(map(int,input_sys().rstrip().split()))

N_list.sort()

group_count=0

person_count=0



for i in N_list:

    person_count+=1

    if person_count == i :
        group_count +=1
        person_count=0

print(group_count)























































